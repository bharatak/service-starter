/**
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech) (4.2.3).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
package com.thoughtworks.api.api;

import com.thoughtworks.api.api.model.BankInfoRequest;
import com.thoughtworks.api.api.model.PaymentFailureResponse;
import io.swagger.annotations.*;
import org.springframework.http.HttpStatus;
import org.springframework.http.MediaType;
import org.springframework.http.ResponseEntity;
import org.springframework.validation.annotation.Validated;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestHeader;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.RequestPart;
import org.springframework.web.context.request.NativeWebRequest;
import org.springframework.web.multipart.MultipartFile;

import javax.validation.Valid;
import javax.validation.constraints.*;
import java.util.List;
import java.util.Map;
import java.util.Optional;

@Validated
@Api(value = "bankinfo", description = "the bankinfo API")
public interface BankinfoApi {

    default Optional<NativeWebRequest> getRequest() {
        return Optional.empty();
    }

    /**
     * POST /bankinfo : Add a bankinfo 
     * Adds the new bank and its url
     *
     * @param bankInfoRequest  (optional)
     * @return Internal server error (status code 500)
     *         or BankInfo created successfully (status code 201)
     */
    @ApiOperation(value = "Add a bankinfo ", nickname = "create", notes = "Adds the new bank and its url", response = BankInfoRequest.class, tags={ "BankInfoDetails", })
    @ApiResponses(value = { 
        @ApiResponse(code = 500, message = "Internal server error", response = PaymentFailureResponse.class),
        @ApiResponse(code = 201, message = "BankInfo created successfully", response = BankInfoRequest.class) })
    @RequestMapping(value = "/bankinfo",
        produces = { "*/*" }, 
        consumes = { "application/json" },
        method = RequestMethod.POST)
    default ResponseEntity<BankInfoRequest> create(@ApiParam(value = ""  )  @Valid @RequestBody(required = false) BankInfoRequest bankInfoRequest) throws Exception {
        getRequest().ifPresent(request -> {
            for (MediaType mediaType: MediaType.parseMediaTypes(request.getHeader("Accept"))) {
                if (mediaType.isCompatibleWith(MediaType.valueOf("*/*"))) {
                    String exampleString = "{ \"bankCode\" : \"bankCode\", \"url\" : \"url\" }";
                    ApiUtil.setExampleResponse(request, "*/*", exampleString);
                    break;
                }
            }
        });
        return new ResponseEntity<>(HttpStatus.valueOf(201));

    }

}
